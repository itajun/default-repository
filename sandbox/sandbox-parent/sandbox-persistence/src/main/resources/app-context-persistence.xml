<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/jdbc
http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.1.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
http://www.springframework.org/schema/util
http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<context:annotation-config />
	<context:component-scan base-package="br.ivj.sandbox.repository" />
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Construct Atomikos UserTransactionManager, needed to configure Spring -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close">
		<!-- when close is called, should we force transactions to terminate or 
			not? -->
		<property name="forceShutdown">
			<value>true</value>
		</property>
	</bean>

	<!-- Also use Atomikos UserTransactionImp, needed to configure Spring -->
	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout">
			<value>300</value>
		</property>
	</bean>

	<bean id="sandboxDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="xaDataSource" ref="sandboxJdbcDataSource" />
		<property name="uniqueResourceName" value="sandboxDatabase" />
	</bean>

	<bean id="legacyDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="xaDataSource" ref="legacyJdbcDataSource" />
		<property name="uniqueResourceName" value="legacyDatabase" />
	</bean>

	<!-- Configure the Spring framework to use JTA transactions from Atomikos -->
	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager">
			<ref bean="atomikosTransactionManager" />
		</property>
		<property name="userTransaction">
			<ref bean="atomikosUserTransaction" />
		</property>
	</bean>

	<beans profile="production">
		<!-- Change it accordingly -->
		<bean id="sandboxJdbcDataSource" class="org.h2.jdbcx.JdbcDataSource">
			<property name="URL" value="jdbc:h2:mem:xa_test1" />
			<property name="user" value="sa" />
			<property name="password" value="" />
		</bean>

		<jdbc:initialize-database data-source="sandboxJdbcDataSource">
			<jdbc:script location="classpath:schema.sql" />
			<jdbc:script location="classpath:test-data.sql" />
		</jdbc:initialize-database>
		
		
		<bean id="legacyJdbcDataSource" class="org.h2.jdbcx.JdbcDataSource">
			<property name="URL" value="jdbc:h2:mem:x2_test2" />
			<property name="user" value="sa" />
			<property name="password" value="" />
		</bean>

		<jdbc:initialize-database data-source="legacyJdbcDataSource">
			<jdbc:script location="classpath:legacy-schema.sql" />
			<jdbc:script location="classpath:legacy-test-data.sql" />
		</jdbc:initialize-database>		
	</beans>

</beans>